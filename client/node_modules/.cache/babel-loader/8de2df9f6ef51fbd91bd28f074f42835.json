{"ast":null,"code":"import _defineProperty from \"/Users/massimoguida/boot-camp/new/assignments/assignment21/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/massimoguida/boot-camp/new/assignments/assignment21/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/massimoguida/boot-camp/new/assignments/assignment21/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/massimoguida/boot-camp/new/assignments/assignment21/client/src/pages/Books.js\";\nimport React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport SaveBtn from \"../components/SaveBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { render } from \"react-dom\"; // class Books extends Component {\n\nfunction Books() {\n  var _this = this;\n\n  // Setting our component's initial state\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formObject = _useState4[0],\n      setFormObject = _useState4[1]; // Load all books and store them with setBooks\n\n\n  useEffect(function () {}, []); // Loads all books and sets them to books\n\n  function loadBooks() {\n    API.getBooks().then(function (res) {\n      return setBooks(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ; // Deletes a book from the database with a given id, then reloads books from the db\n\n  function saveBook(id) {\n    // use the id to find the booko you're referencing\n    var book = books.filter(function (x) {\n      return x._id === id;\n    });\n    book = book[0]; // pass thhat book to api.saveBook\n\n    console.log(book);\n    API.saveBook({\n      title: book.volumeInfo.title,\n      authors: book.volumeInfo.authors[0],\n      description: book.volumeInfo.description // date: formObject.publishedDate,\n      //image: book.volumeInfo.imageLinks.thumbnail,\n      //link: book.volumeInfo.previewLink\n      // book.volumeInfo\n      // this.\n\n    }) // .then(res => loadBooks())\n    .then(function (res) {\n      return console.log(\"response\", res);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } // Deletes a book from the database with a given id, then reloads books from the db\n\n\n  function deleteBook(id) {\n    API.deleteBook(id).then(function (res) {\n      return loadBooks();\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } // Handles updating component state when the user types into the input field\n\n\n  function handleInputChange(event) {\n    // console.log(\"event.target\", event.target);\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setFormObject(_objectSpread({}, formObject, _defineProperty({}, name, value)));\n    console.log(\"formObject\", formObject);\n  }\n\n  ; // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    console.log(\"Search Button clicked\");\n    console.log(\"event.target.value 2\", event.target.value);\n    API.getSearchedBooks({\n      title: formObject.title\n    }).then(function (res) {\n      if (res.data.status === \"error\") {\n        throw new Error(res.data.message);\n      } // console.log(\"Response:\", res);\n\n\n      console.log(\"Response:\", res.data.items);\n      setBooks(res.data.items);\n      console.log(books);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n\n  ; // render() {\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12 s-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"React Google Books Search\"), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      color: \"orange\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, \"Search for and Save Books of Interest\")), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"blue\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, \"Book\"), \" Search\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: handleInputChange,\n    name: \"title\",\n    placeholder: \"Search by Book Title (required, e.g. \\\"The Great Gatsby\\\")\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormBtn, {\n    onClick: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, \"Search\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md 12 s-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Results\"), books.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, books.map(function (book) {\n    return (\n      /*#__PURE__*/\n      // console.log(books);\n      React.createElement(ListItem, {\n        key: book._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/books/\" + book._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 23\n        }\n      }, book.volumeInfo.title, \", by \", book.volumeInfo.authors)), /*#__PURE__*/React.createElement(DeleteBtn, {\n        onClick: function onClick() {\n          return deleteBook(book._id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(SaveBtn, {\n        onClick: function onClick() {\n          return saveBook(book._id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }))\n    );\n  })) : /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      color: \"red\",\n      fontStyle: \"italic\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"No Results to Display\")))); // }\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/massimoguida/boot-camp/new/assignments/assignment21/client/src/pages/Books.js"],"names":["React","useState","useEffect","DeleteBtn","SaveBtn","Jumbotron","API","Link","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","render","Books","books","setBooks","formObject","setFormObject","loadBooks","getBooks","then","res","data","catch","err","console","log","saveBook","id","book","filter","x","_id","title","volumeInfo","authors","description","deleteBook","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","getSearchedBooks","status","Error","message","items","color","length","map","fontStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport SaveBtn from \"../components/SaveBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { render } from \"react-dom\";\n\n// class Books extends Component {\n\n\nfunction Books() {\n  // Setting our component's initial state\n  const [books, setBooks] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n  // Load all books and store them with setBooks\n  useEffect(() => {\n  }, [])\n\n  // Loads all books and sets them to books\n  function loadBooks() {\n    API.getBooks()\n      .then(res => \n        setBooks(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n\n  function saveBook(id) {\n    // use the id to find the booko you're referencing\n    var book = books.filter(x => x._id === id);\n    book = book[0];\n    // pass thhat book to api.saveBook\n    console.log(book);\n  API.saveBook({\n    title: book.volumeInfo.title,\n    authors: book.volumeInfo.authors[0],\n    description: book.volumeInfo.description,\n    // date: formObject.publishedDate,\n    //image: book.volumeInfo.imageLinks.thumbnail,\n    //link: book.volumeInfo.previewLink\n    // book.volumeInfo\n    // this.\n\n  })\n    // .then(res => loadBooks())\n    .then(res => console.log(\"response\", res))\n    .catch(err => console.log(err));\n  }\n\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    API.deleteBook(id)\n      .then(res => loadBooks())\n      .catch(err => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    // console.log(\"event.target\", event.target);\n    const { name, value } = event.target;\n    setFormObject({...formObject, [name]: value});\n    console.log(\"formObject\", formObject);\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    console.log(\"Search Button clicked\");\n    console.log(\"event.target.value 2\", event.target.value);\n\n    API.getSearchedBooks({\n      title: formObject.title\n    })\n    .then(res => {\n      if (res.data.status === \"error\") {\n        throw new Error(res.data.message);\n      }\n      // console.log(\"Response:\", res);\n      console.log(\"Response:\", res.data.items);\n      setBooks(res.data.items);\n      console.log(books);\n\n    })\n        .catch(err => console.log(err));\n  };\n\n\n  // render() {\n\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12 s-12\">\n            <Jumbotron>\n              <h1 style={{ color: \"green\" }}>React Google Books Search</h1>\n              <h2 style={{ color: \"orange\" }}>Search for and Save Books of Interest</h2>\n            </Jumbotron>\n            <h3><span style={{ color: \"blue\" }}>Book</span> Search</h3>\n            <form>\n              <Input\n                onChange={handleInputChange}\n                name=\"title\"\n                placeholder='Search by Book Title (required, e.g. \"The Great Gatsby\")'\n              />\n\n              <FormBtn\n                onClick={handleFormSubmit}\n              >\n                Search\n              </FormBtn>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md 12 s-12\">\n          <h3>Results</h3>\n          {books.length ? (\n            <List>\n                {books.map(book => (\n            // console.log(books);\n                  <ListItem key={book._id}>\n                    <Link to={\"/books/\" + book._id}>\n                      <strong>\n                        {book.volumeInfo.title}, by {book.volumeInfo.authors}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => deleteBook(book._id)} />\n                    <SaveBtn onClick={() => saveBook(book._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h4 style={{ color: \"red\", fontStyle: \"italic\" }}>No Results to Display</h4>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n      // }\n  }\n\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}